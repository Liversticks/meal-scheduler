{"version":3,"sources":["requests/get-username.js","requests/get-token.js","components/signup.js","components/login.js","config/prod.js","requests/meals.js","components/forms/edit-form.js","components/forms/blank-form.js","components/forms/other-form.js","components/board/case-switch.js","components/board/day.js","components/board/week.js","components/board/logout-warning.js","components/board/main-board.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["getCurrentUser","JSON","parse","localStorage","getItem","authToken","user","accessToken","signupSchema","Yup","shape","username","required","email","password","min","confirmPassword","oneOf","Signup","props","state","message","className","initialValues","validationSchema","onSubmit","values","bag","onSignup","then","response","data","setState","setTimeout","history","push","catch","error","resMessage","toString","setSubmitting","errors","touched","htmlFor","name","type","React","Component","withRouter","loginSchema","Login","onLogin","setItem","stringify","onLoginSuccess","isSubmitting","isValidating","disabled","prodConfig","meal_url","login_url","signup_url","API_URL","date","description","axios","post","meal_type","meal_desc","headers","put","url","method","formSchema","validStatus","EditInnerModal","useState","status","setStatus","formattedDate","moment","blob","format","formattedType","charAt","toUpperCase","slice","Modal","show","onHide","size","centered","Header","closeButton","Title","Body","length","Alert","variant","includes","MealService","editMeal","request","component","rows","Button","Footer","onClick","deleteMeal","console","log","icon","faTrash","faThumbsUp","EditForm","modalShow","setModalShow","Container","fluid","faEdit","onUpdate","BlankInnerModal","isSubmit","setSubmit","newMeal","BlankForm","faUserPlus","OtherInnerModal","Card","Subtitle","chef","Text","OtherForm","CaseSwitch","hasOwnProperty","getUsername","Day","Col","dayOfWeek","formattedDay","breakfastBlob","lunchBlob","dinnerBlob","snackBlob","Week","mutMoment","start","week","isSameOrBefore","end","clone","add","days","map","dateString","tempDate","retObj","key","dayBlob","dates","Table","striped","bordered","CollapseWeek","opened","open","setOpen","firstExpression","secondExpression","month","Row","xs","faMinusCircle","faPlusCircle","Collapse","in","LogoutWarning","Heading","Link","href","onLogout","MainBoard","start1","startOf","end1","endOf","start2","end2","start3","end3","start4","end4","start5","end5","stale","MEAL_URL","LOGIN_URL","SIGNUP_URL","App","logout","bind","currentUser","undefined","mealList","loginStale","update","this","get","removeItem","to","data-toggle","data-target","id","exact","path","login","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.009a9466.chunk.js","sourcesContent":["export function getUsername() {\r\n  const username = localStorage.getItem('username')\r\n  if (username.length > 0) {\r\n    return username\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  return JSON.parse(localStorage.getItem('user'))\r\n}\r\n","export default function authToken() {\r\n  const user = JSON.parse(localStorage.getItem('user'))\r\n  if (user && user.accessToken) {\r\n    return {\r\n      'x-access-token': user.accessToken\r\n    }\r\n  } else {\r\n    return {}\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n//Adjust validation constraints\r\nconst signupSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required('Username is required'),\r\n  email: Yup.string()\r\n    .email('Email is invalid')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(10, 'Password must be at least 10 characters long')\r\n    .required('Password is required'),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n    .required('Must confirm password')\r\n});\r\n\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: ''\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n              <h3 className=\"pb-2\">Signup</h3>\r\n              <Formik\r\n              initialValues={{\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n              }}\r\n              validationSchema={signupSchema}\r\n              onSubmit={(values, bag) => {\r\n                //Send data to the server\r\n                //TEMP\r\n                this.props.onSignup(values.username, values.email, values.password).then(response => {\r\n                  if (response.data.message && response.data.message === 'Signed up successfully!') {\r\n                    this.setState({\r\n                      message: response.data.message\r\n                    })\r\n                    setTimeout(() => { this.props.history.push('/login') }, 2000)\r\n                  }\r\n                }).catch(error => {\r\n                  const resMessage = (error.response && error.response.data && error.response.data.message) ||\r\n                  error.message || error.toString()\r\n                  this.setState({\r\n                    message: resMessage\r\n                  });\r\n                  bag.setSubmitting(false)\r\n                })\r\n              }}\r\n              >\r\n              {({ errors, touched }) => (\r\n                <Form>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Field name=\"username\" type=\"text\" className='form-control'/>\r\n                    {touched.username && errors.username && <div className=\"alert alert-danger mt-2\">{errors.username}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <Field name=\"email\" type=\"text\" className='form-control'/>\r\n                    {touched.email && errors.email && <div className=\"alert alert-danger mt-2\">{errors.email}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field name=\"password\" type=\"password\" className='form-control'/>\r\n                    {touched.password && errors.password && <div className=\"alert alert-danger mt-2\">{errors.password}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                    <Field name=\"confirmPassword\" type=\"password\" className='form-control'/>\r\n                    {touched.confirmPassword && errors.confirmPassword && <div className=\"alert alert-danger mt-2\">{errors.confirmPassword}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <button type=\"submit\" className=\"btn btn-primary mr-2\">Sign Up</button>\r\n                    <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                  </div>\r\n                  { this.state.message &&\r\n                    <div className={this.state.message === 'Signed up successfully!' ? \"alert alert-success mt-2\" : \"alert alert-danger mt-2\" }>\r\n                      {this.state.message}\r\n                    </div> }\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  username: Yup.string().required('Please enter your username.'),\r\n  password: Yup.string().required('Please enter your password.')\r\n})\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      message: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n            <h3 className=\"pb-2\">Meals App</h3>\r\n          <Formik\r\n          initialValues={{\r\n            username: '',\r\n            password: ''\r\n          }}\r\n          validationSchema={loginSchema}\r\n          onSubmit={(values, bag) => {\r\n            //If this function is called, validation has occurred successfully\r\n            this.props.onLogin(values.username, values.password).then(response => {\r\n              if (response.data.accessToken) {\r\n                localStorage.setItem(\"user\", JSON.stringify(response.data))\r\n                localStorage.setItem(\"username\", values.username)\r\n              }\r\n              this.props.onLoginSuccess()\r\n              this.props.history.push('/meals')\r\n              //window.location.reload()\r\n              //return response.data\r\n            }).catch(error => {\r\n              const resMessage = (error.response && error.response.data && error.response.data.message) ||\r\n              error.message || error.toString()\r\n              this.setState({\r\n                message: resMessage\r\n              });\r\n              bag.setSubmitting(false)\r\n            })\r\n            //console.log(values.username)\r\n\r\n          }}>\r\n          {({ errors, touched, isSubmitting, isValidating }) => (\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label className=\"align-middle\" htmlFor=\"username\">Username</label>\r\n                <Field name=\"username\" type=\"text\" className=\"form-control\"/>\r\n                { touched.username && errors.username &&\r\n                  <div className=\"alert alert-danger mt-2\">{errors.username}</div>\r\n                }\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field name=\"password\" type=\"password\" className=\"form-control\"/>\r\n                { touched.password && errors.password &&\r\n                  <div className=\"alert alert-danger mt-2\">{errors.password}</div>\r\n                }\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary\" type=\"submit\" disabled={isSubmitting}>\r\n                  {(isSubmitting || isValidating) && (\r\n                    <span className=\"spinner-border spinner-border-sm\"/>\r\n                  )}\r\n                  <span>Login</span>\r\n\r\n                </button>\r\n              </div>\r\n              { this.state.message &&\r\n                <div className=\"alert alert-danger mt-2\">\r\n                  {this.state.message}\r\n                </div> }\r\n            </Form>\r\n          )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","let prodConfig = {\r\n  meal_url: 'http://ls-meal-app.herokuapp.com/api/meals',\r\n  login_url: 'http://ls-meal-app.herokuapp.com/api/login',\r\n  signup_url: 'http://ls-meal-app.herokuapp.com/api/signup',\r\n}\r\n\r\nexport default prodConfig\r\n","import axios from 'axios'\r\nimport authToken from './get-token'\r\nimport localConfig from '../config/local-dev'\r\nimport prodConfig from '../config/prod'\r\n\r\nconst API_URL = process.env.NODE_ENV === 'production' ? prodConfig['meal_url'] : localConfig['meal_url']\r\n\r\nclass MealService {\r\n  newMeal(date, type, description) {\r\n    return axios.post(API_URL, {\r\n      date: date,\r\n      meal_type: type,\r\n      meal_desc: description\r\n    }, {\r\n      headers: authToken()\r\n    })\r\n  }\r\n\r\n  editMeal(date, type, description) {\r\n    return axios.put(API_URL, {\r\n      date: date,\r\n      meal_type: type,\r\n      meal_desc: description\r\n    }, {\r\n      headers: authToken()\r\n    })\r\n  }\r\n\r\n  deleteMeal(date, type) {\r\n    //console.log(type)\r\n    return axios({\r\n      url: API_URL,\r\n      method: 'delete',\r\n      headers: authToken(),\r\n      data: {\r\n        date: date,\r\n        meal_type: type\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default new MealService()\r\n","import React from 'react'\r\nimport { Modal, Button, Alert, Container } from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash, faThumbsUp } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport MealService from '../../requests/meals'\r\n\r\nconst formSchema = Yup.object().shape({\r\n  description: Yup.string().required('Please describe your meal.'),\r\n  date: Yup.string().required(),\r\n  type: Yup.string().required()\r\n})\r\n\r\nconst validStatus = [\r\n  'Meal details updated successfully!',\r\n  'Meal successfully deleted.'\r\n]\r\n\r\nfunction EditInnerModal(props) {\r\n  const [status, setStatus] = React.useState('')\r\n\r\n  const formattedDate = moment(props.blob.date, \"MM-DD-YYYY\").format(\"MMMM Do\")\r\n  const formattedType = props.blob.type.charAt(0).toUpperCase() + props.blob.type.slice(1)\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"lg\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {formattedType} for {formattedDate}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        { status.length > 0 ?\r\n          <Alert variant={validStatus.includes(status) ? \"success\" : \"danger\" }>\r\n            {status}\r\n          </Alert>\r\n        : <Formik\r\n        initialValues={{\r\n          date: props.blob.date,\r\n          type: props.blob.type,\r\n          description: props.blob.description\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={ (values, bag) => {\r\n          MealService.editMeal(values.date, values.type, values.description).then(response => {\r\n            setStatus(response.data.message)\r\n          }).catch(error => {\r\n            if (error.response) {\r\n              setStatus(error.response.data.message)\r\n            } else if (error.request) {\r\n              setStatus(error.request)\r\n            } else {\r\n              setStatus(error.message)\r\n            }\r\n          })\r\n          bag.setSubmitting(false)\r\n        }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Meal description</label>\r\n                <Field name=\"description\" component=\"textarea\" className=\"form-control\" rows=\"6\"/>\r\n                <small className=\"form-text text-muted\">\r\n                  Change of heart? New meal ideas are always welcome.\r\n                </small>\r\n                { touched.description && errors.description &&\r\n                  <div className=\"alert alert-danger mt-2\">{errors.description}</div>\r\n                }\r\n              </div>\r\n              <Button className=\"float-right\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        }\r\n\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        { status === '' ?\r\n        <Button variant=\"danger\" onClick={() => {\r\n          MealService.deleteMeal(props.blob.date, props.blob.type).then(response => {\r\n            setStatus(response.data.message)\r\n          }).catch(error => {\r\n            if (error.response) {\r\n              setStatus(error.response.data.message)\r\n              console.log(\"first branch\")\r\n            } else if (error.request) {\r\n              setStatus(error.request)\r\n              console.log(\"second branch\")\r\n            } else {\r\n              console.log(\"third branch\")\r\n              setStatus(error.message)\r\n            }\r\n            console.log(error)\r\n          })\r\n        }}>\r\n          <FontAwesomeIcon icon={faTrash}/> Delete Meal\r\n        </Button>\r\n        : <Button variant=\"success\" onClick={() => {\r\n          props.onHide()\r\n          setStatus('')\r\n        }}>\r\n            <FontAwesomeIcon icon={faThumbsUp}/> Got it\r\n          </Button>\r\n        }\r\n\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nfunction EditForm(props) {\r\n  const [modalShow, setModalShow] = React.useState(false)\r\n  return (\r\n    <Container fluid>\r\n      <Button className=\"fill-button\" variant=\"info\" onClick={() => setModalShow(true)}>\r\n        <FontAwesomeIcon className=\"mr-1\" icon={faEdit}/> Modify\r\n      </Button>\r\n      <EditInnerModal show={modalShow} onHide={() => {\r\n        setModalShow(false)\r\n        props.onUpdate()\r\n      }} blob={props.blob}/>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default EditForm\r\n","import React from 'react'\r\nimport { Modal, Button, Alert, Container } from 'react-bootstrap'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserPlus, faThumbsUp  } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport MealService from '../../requests/meals'\r\n\r\n\r\nconst formSchema = Yup.object().shape({\r\n  description: Yup.string().required('Please describe your meal.'),\r\n  date: Yup.string().required(),\r\n  type: Yup.string().required()\r\n})\r\n\r\nfunction BlankInnerModal(props) {\r\n  const [isSubmit, setSubmit] = React.useState('')\r\n  const formattedDate = moment(props.blob.date, \"MM-DD-YYYY\").format(\"MMMM Do\")\r\n  const formattedType = props.blob.type.charAt(0).toUpperCase() + props.blob.type.slice(1)\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      size=\"lg\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {formattedType} for {formattedDate}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        { isSubmit.length > 0 ?\r\n          <Alert variant={isSubmit === 'Meal scheduled successfully!' ? \"success\" : \"danger\"}>\r\n            { isSubmit }\r\n          </Alert>\r\n        : <Formik\r\n        initialValues={{\r\n          date: props.blob.date,\r\n          type: props.blob.type,\r\n          description: ''\r\n        }}\r\n        validationSchema={formSchema}\r\n        onSubmit={ (values, bag) => {\r\n          MealService.newMeal(values.date, values.type, values.description).then(response => {\r\n            setSubmit(response.data.message)\r\n          }).catch(error => {\r\n            if (error.response) {\r\n              setSubmit(error.response.data.message)\r\n            } else if (error.request) {\r\n              setSubmit(error.request)\r\n            } else {\r\n              setSubmit(error.message)\r\n            }\r\n          })\r\n          //bag.setSubmitting(false)\r\n        }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Meal description</label>\r\n                <Field name=\"description\" component=\"textarea\" className=\"form-control\" rows=\"6\"/>\r\n                <small className=\"form-text text-muted\">\r\n                  Describe the meal you will prepare.\r\n                </small>\r\n                { touched.description && errors.description &&\r\n                  <div className=\"alert alert-danger mt-2\">{errors.description}</div>\r\n                }\r\n              </div>\r\n              <Button className=\"float-right\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        }\r\n      </Modal.Body>\r\n      { isSubmit.length > 0 &&\r\n        <Modal.Footer>\r\n          <Button className=\"float-right\" variant=\"success\" onClick={props.onHide}>\r\n            <FontAwesomeIcon icon={faThumbsUp}/> Got it\r\n          </Button>\r\n        </Modal.Footer>\r\n      }\r\n    </Modal>\r\n  )\r\n}\r\n\r\nfunction BlankForm(props) {\r\n  const [modalShow, setModalShow] = React.useState(false)\r\n  return (\r\n    <Container fluid className=\"fill-div\">\r\n      <Button variant=\"success\" className=\"fill-button\" onClick={() => setModalShow(true)}>\r\n        <FontAwesomeIcon className=\"mr-1\" icon={faUserPlus}/> Sign Up\r\n      </Button>\r\n      <BlankInnerModal show={modalShow} onHide={() => {\r\n        setModalShow(false)\r\n        props.onUpdate()\r\n      }} blob={props.blob}/>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default BlankForm\r\n","import React from 'react'\r\nimport { Modal, Card, Button, Container } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\n\r\nfunction OtherInnerModal(props) {\r\n  const formattedDate = moment(props.blob.date, \"MM-DD-YYYY\").format(\"MMMM Do\")\r\n  const formattedType = props.blob.type.charAt(0).toUpperCase() + props.blob.type.slice(1)\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size=\"lg\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {formattedType} for {formattedDate}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Subtitle>\r\n                Chef: {props.blob.chef}\r\n              </Card.Subtitle>\r\n              <Card.Text>\r\n                {props.blob.description}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" onClick={props.onHide}>\r\n            <FontAwesomeIcon icon={faThumbsUp}/> Got it\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction OtherForm(props) {\r\n  const [modalShow, setModalShow] = React.useState(false)\r\n\r\n  return (\r\n    <Container fluid className=\"fill-div\">\r\n      <Button variant=\"light\" className=\"fill-button\" onClick={() => setModalShow(true)}>\r\n        Assigned to <em className=\"other-username\">{props.blob.chef}</em>\r\n      </Button>\r\n      <OtherInnerModal show={modalShow} onHide={() => setModalShow(false)} blob={props.blob}/>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default OtherForm\r\n","import React from 'react'\r\nimport EditForm from '../forms/edit-form'\r\nimport BlankForm from '../forms/blank-form'\r\nimport OtherForm from '../forms/other-form'\r\nimport { getUsername } from '../../requests/get-username'\r\n\r\nfunction CaseSwitch(props) {\r\n  /*\r\n  Input object\r\n    blob\r\n    {\r\n      date,\r\n      type,\r\n      description (OPTIONAL),\r\n      chef (OPTIONAL),\r\n    }\r\n  If blob contains chef, then it must also contain description\r\n  If blob contains chef, see if chef matches current user\r\n  */\r\n\r\n  if (props.blob.hasOwnProperty('chef')) {\r\n    if (props.blob.chef === getUsername()) {\r\n      return (\r\n        <EditForm onUpdate={props.onUpdate} blob={props.blob}/>\r\n      )\r\n    } else {\r\n      return (\r\n        <OtherForm blob={props.blob}/>\r\n      )\r\n    }\r\n  } else {\r\n    return (\r\n      <BlankForm onUpdate={props.onUpdate} blob={props.blob}/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CaseSwitch\r\n","import React from 'react'\r\nimport { Col } from 'react-bootstrap'\r\nimport CaseSwitch from './case-switch'\r\n\r\nfunction Day(props) {\r\n  return (\r\n      <tr>\r\n        <td>\r\n          <div>\r\n            <Col>\r\n              <div className=\"day-of-week\">{props.blob.dayOfWeek}</div>\r\n              <div>{props.blob.formattedDay}</div>\r\n            </Col>\r\n          </div>\r\n        </td>\r\n        <td className=\"centered-cell\"><CaseSwitch onUpdate={props.onUpdate} blob={props.blob.breakfastBlob}/></td>\r\n        <td className=\"centered-cell\"><CaseSwitch onUpdate={props.onUpdate} blob={props.blob.lunchBlob}/></td>\r\n        <td className=\"centered-cell\"><CaseSwitch onUpdate={props.onUpdate} blob={props.blob.dinnerBlob}/></td>\r\n        <td className=\"centered-cell\"><CaseSwitch onUpdate={props.onUpdate} blob={props.blob.snackBlob}/></td>\r\n      </tr>\r\n  )\r\n}\r\n\r\nexport default Day\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { Row, Col, Collapse, Table } from 'react-bootstrap'\r\nimport Day from './day'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Week(props) {\r\n  let mutMoment = props.start\r\n  let week = []\r\n  while (mutMoment.isSameOrBefore(props.end, 'day')) {\r\n    week.push(mutMoment.format(\"L\"))\r\n    mutMoment = mutMoment.clone().add(1, 'd')\r\n  }\r\n  const weekBlobs = week.map((dateString) => {\r\n      let tempDate = moment(dateString, \"MM-DD-YYYY\")\r\n      let retObj = {\r\n        key: dateString,\r\n        dayBlob: {\r\n          formattedDay: tempDate.format(\"MMMM Do\"),\r\n          dayOfWeek: tempDate.format(\"dddd\"),\r\n          breakfastBlob: {\r\n            date: dateString,\r\n            type: 'breakfast'\r\n          },\r\n          lunchBlob: {\r\n            date: dateString,\r\n            type: 'lunch'\r\n          },\r\n          dinnerBlob: {\r\n            date: dateString,\r\n            type: 'dinner'\r\n          },\r\n          snackBlob: {\r\n            date: dateString,\r\n            type: 'snack'\r\n          }\r\n        }\r\n      }\r\n      if (props.dates.hasOwnProperty(dateString)) {\r\n        //at least one meal that day is assigned\r\n        if (props.dates[dateString]['breakfast'].hasOwnProperty('chef')) {\r\n          retObj['dayBlob']['breakfastBlob']['description'] = props.dates[dateString]['breakfast']['meal_desc']\r\n          retObj['dayBlob']['breakfastBlob']['chef'] = props.dates[dateString]['breakfast']['chef']\r\n        }\r\n        if (props.dates[dateString]['lunch'].hasOwnProperty('chef')) {\r\n          retObj['dayBlob']['lunchBlob']['description'] = props.dates[dateString]['lunch']['meal_desc']\r\n          retObj['dayBlob']['lunchBlob']['chef'] = props.dates[dateString]['lunch']['chef']\r\n        }\r\n        if (props.dates[dateString]['dinner'].hasOwnProperty('chef')) {\r\n          retObj['dayBlob']['dinnerBlob']['description'] = props.dates[dateString]['dinner']['meal_desc']\r\n          retObj['dayBlob']['dinnerBlob']['chef'] = props.dates[dateString]['dinner']['chef']\r\n        }\r\n        if (props.dates[dateString]['snack'].hasOwnProperty('chef')) {\r\n          retObj['dayBlob']['snackBlob']['description'] = props.dates[dateString]['snack']['meal_desc']\r\n          retObj['dayBlob']['snackBlob']['chef'] = props.dates[dateString]['snack']['chef']\r\n        }\r\n      }\r\n      return retObj\r\n  })\r\n  const days = weekBlobs.map(blob => {\r\n    return (\r\n      <Day key={blob.key} onUpdate={props.onUpdate} blob={blob.dayBlob}/>\r\n    )\r\n  })\r\n  return (\r\n    <div>\r\n      <Table striped bordered className=\"mt-3\">\r\n        <colgroup>\r\n          <col className=\"table-even\"/>\r\n          <col className=\"table-even\"/>\r\n          <col className=\"table-even\"/>\r\n          <col className=\"table-even\"/>\r\n          <col className=\"table-even\"/>\r\n        </colgroup>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">Date</th>\r\n            <th className=\"text-center\">Breakfast</th>\r\n            <th className=\"text-center\">Lunch</th>\r\n            <th className=\"text-center\">Dinner</th>\r\n            <th className=\"text-center\">Snack</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {days}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction CollapseWeek(props) {\r\n  const [open, setOpen] = React.useState(props.opened)\r\n  const firstExpression = moment(props.start).format(\"MMMM Do\")\r\n  const secondExpression = moment(props.start).month() === moment(props.end).month() ?\r\n    moment(props.end).format(\"Do\") : moment(props.end).format(\"MMMM Do\")\r\n  return (\r\n    <div>\r\n      <Row className=\"mt-2 mb-2 text-light bg-dark-1 border border-secondary\">\r\n        <Col xs={10}><h3>Week of {`${firstExpression} - ${secondExpression}`}</h3></Col>\r\n        <Col className=\"toggle-collapse\">\r\n          <FontAwesomeIcon className=\"mt-2\" size=\"lg\" onClick={() => setOpen(!open)} icon={open ? faMinusCircle : faPlusCircle }/>\r\n        </Col>\r\n      </Row>\r\n      <Collapse in={open}>\r\n        <div>\r\n          <Week onUpdate={props.onUpdate} start={props.start} end={props.end} dates={props.dates}/>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollapseWeek\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction LogoutWarning(props) {\r\n  return (\r\n    <Alert className=\"mt-2\" variant=\"danger\">\r\n      <Alert.Heading>\r\n        Session timed out.\r\n      </Alert.Heading>\r\n      <p>\r\n        Please <Alert.Link href=\"/login\" onClick={props.onLogout}>log out</Alert.Link> and log in again.\r\n      </p>\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default LogoutWarning\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport moment from 'moment'\r\nimport CollapseWeek from './week'\r\nimport LogoutWarning from './logout-warning'\r\n\r\nfunction MainBoard(props) {\r\n  //entries: props.dates\r\n  const start1 = moment().startOf('day')\r\n  const end1 = start1.clone().endOf('week')\r\n  const start2 = end1.clone().add(1, 'd').startOf('day')\r\n  const end2 = start2.clone().endOf('week')\r\n  const start3 = end2.clone().add(1, 'd').startOf('day')\r\n  const end3 = start3.clone().endOf('week')\r\n  const start4 = end3.clone().add(1, 'd').startOf('day')\r\n  const end4 = start4.clone().endOf('week')\r\n  const start5 = end4.clone().add(1, 'd').startOf('day')\r\n  const end5 = start5.clone().endOf('week')\r\n\r\n  return (\r\n    <Container>\r\n      {props.stale &&\r\n        <LogoutWarning onLogout={props.onLogout}/>\r\n      }\r\n      <h1 className=\"mt-4 mb-4\">Upcoming Meals</h1>\r\n      <CollapseWeek opened={true} onUpdate={props.onUpdate} start={start1} end={end1} dates={props.dates}/>\r\n      <CollapseWeek opened={false} onUpdate={props.onUpdate} start={start2} end={end2} dates={props.dates}/>\r\n      <CollapseWeek opened={false} onUpdate={props.onUpdate} start={start3} end={end3} dates={props.dates}/>\r\n      <CollapseWeek opened={false} onUpdate={props.onUpdate} start={start4} end={end4} dates={props.dates}/>\r\n      <CollapseWeek opened={false} onUpdate={props.onUpdate} start={start5} end={end5} dates={props.dates}/>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default MainBoard\r\n","import React from 'react'\r\nconst SOURCE_URL = 'https://github.com/Liversticks/meal-client'\r\n\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"mt-3 mb-3 text-center\">\r\n      Made by Liversticks. Check out the source code <a href={SOURCE_URL}>here.</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Link, Route, Redirect } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport axios from 'axios'\nimport './App.css'\n\n\nimport { getCurrentUser } from './requests/get-username'\nimport authToken from './requests/get-token'\n\nimport Signup from './components/signup'\nimport Login from './components/login'\nimport MainBoard from './components/board/main-board'\nimport Footer from './components/footer'\n\nimport localConfig from './config/local-dev'\nimport prodConfig from './config/prod'\n\nconst MEAL_URL = process.env.NODE_ENV === 'production' ? prodConfig['meal_url'] : localConfig['meal_url']\nconst LOGIN_URL = process.env.NODE_ENV === 'production' ? prodConfig['login_url'] : localConfig['login_url']\nconst SIGNUP_URL = process.env.NODE_ENV === 'production' ? prodConfig['signup_url'] : localConfig['signup_url']\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.logout = this.logout.bind(this)\n    this.state = {\n      currentUser: getCurrentUser() ? getCurrentUser(): undefined,\n      mealList: [],\n      loginStale: false\n    }\n    this.update = this.update.bind(this)\n  }\n\n  update() {\n    const user = getCurrentUser();\n    if (user) {\n      this.setState({\n        currentUser: user\n      })\n    }\n    axios.get(MEAL_URL, { headers: authToken() }).then(\n      response => {\n        this.setState({\n          mealList: response.data\n        })\n      }\n    ).catch(error => {\n      //console.log(\"Should only be able to get meals when successfully logged in.\")\n      console.log(error.toString())\n      if (user) {\n        this.setState({\n          loginStale: true\n        })\n      }\n    })\n  }\n\n  signup() {\n    return axios.post()\n  }\n\n  login(username, password) {\n    return axios.post(LOGIN_URL, {\n      username: username,\n      password: password\n    })\n  }\n\n  onSignup(username, email, password) {\n    return axios.post(SIGNUP_URL, {\n      username: username,\n      email: email,\n      password: password\n    })\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\")\n    localStorage.removeItem(\"username\")\n    this.setState({\n      loginStale: false\n    })\n    //window.alert('Successfully logged out.')\n  }\n\n  componentDidMount() {\n    this.update()\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark sticky-top\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n            Meals\n            </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navcollapse\">\n              <span className=\"navbar-toggler-icon\"/>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navcollapse\">\n                { this.state.currentUser ? (\n                  <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                      <a href=\"/login\" className=\"nav-link\" onClick={this.logout}>\n                        Logout\n                      </a>\n                    </li>\n                  </ul>\n                ) : (\n                  <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                      <Link to={\"/login\"} className=\"nav-link\">\n                        Login\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link to={\"/signup\"} className=\"nav-link\">\n                        Signup\n                      </Link>\n                    </li>\n                  </ul>\n                )}\n            </div>\n          </nav>\n          <div>\n            <Switch>\n              <Route exact path={[\"/\", \"/meals\"]}>\n                { this.state.currentUser ? <MainBoard onLogout={this.logout} stale={this.state.loginStale} onUpdate={this.update} dates={this.state.mealList}/> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route exact path=\"/login\">\n                { this.state.currentUser ? <Redirect to=\"/meals\"/> : <Login onLogin={this.login} onLoginSuccess={this.update}/> }\n              </Route>\n              <Route exact path=\"/signup\">\n                { this.state.currentUser ? <Redirect to=\"/meals\" /> : <Signup onSignup={this.onSignup}/>}\n              </Route>\n            </Switch>\n          </div>\n          <div>\n            <Footer/>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}